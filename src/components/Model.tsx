// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

// import * as THREE from 'three';
// import React from 'react';
// import {useGLTF} from '@react-three/drei/native';
// import {GLTF} from 'three-stdlib';

// type GLTFResult = GLTF & {
//   nodes: {
//     pasted__model1: THREE.Mesh;
//     pasted__model2: THREE.Mesh;
//     pasted__model3: THREE.Mesh;
//     pasted__model4: THREE.Mesh;
//     pasted__model5: THREE.Mesh;
//     pasted__model6: THREE.Mesh;
//     pasted__model7: THREE.Mesh;
//   };
//   materials: {
//     koltuk: THREE.MeshStandardMaterial;
//     siyah: THREE.MeshStandardMaterial;
//     metal: THREE.MeshStandardMaterial;
//     altin: THREE.MeshStandardMaterial;
//   };
// };

// export default function Model(props: JSX.IntrinsicElements['group']) {
//   const {nodes, materials} = useGLTF(
//     require('../assets/Model.glb'),
//   ) as GLTFResult;

//   return (
//     <group {...props} dispose={null} scale={7} position={[0, -1.4, 0]}>
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.pasted__model1.geometry}
//         material={materials.koltuk}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.pasted__model2.geometry}
//         material={materials.siyah}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.pasted__model3.geometry}
//         material={materials.metal}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.pasted__model4.geometry}
//         material={materials.siyah}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.pasted__model5.geometry}
//         material={materials.siyah}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.pasted__model6.geometry}
//         material={materials.altin}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.pasted__model7.geometry}
//         material={materials.koltuk}
//       />
//     </group>
//   );
// }

// // useGLTF.preload(require('../assets/Model.glb'));

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh
    Object_3: THREE.Mesh
    Object_4: THREE.Mesh
    Object_5: THREE.Mesh
    Object_6: THREE.Mesh
    Object_7: THREE.Mesh
    Object_8: THREE.Mesh
    Object_9: THREE.Mesh
    Object_10: THREE.Mesh
    Object_11: THREE.Mesh
    Object_12: THREE.Mesh
    Object_13: THREE.Mesh
    Object_14: THREE.Mesh
    Object_15: THREE.Mesh
    Object_16: THREE.Mesh
    Object_17: THREE.Mesh
    Object_18: THREE.Mesh
    Object_19: THREE.Mesh
    Object_20: THREE.Mesh
    Object_21: THREE.Mesh
    Object_22: THREE.Mesh
    Object_23: THREE.Mesh
    Object_24: THREE.Mesh
  }
  materials: {
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
    None: THREE.MeshStandardMaterial
    ['black_glossy.003']: THREE.MeshStandardMaterial
    black_with_text: THREE.MeshStandardMaterial
    Metal: THREE.MeshStandardMaterial
    black_glossy: THREE.MeshStandardMaterial
    ['black_glossy.001']: THREE.MeshStandardMaterial
    ['black_glossy.002']: THREE.MeshPhysicalMaterial
    material: THREE.MeshStandardMaterial
    port: THREE.MeshStandardMaterial
    port_frame: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(require('../assets/nvidia_geforce_rtx_3090_graphics_card.glb'),) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_2.geometry}
          material={materials['Material.002']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_3.geometry}
          material={materials['Material.003']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_4.geometry}
          material={materials['Material.004']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_5.geometry}
          material={materials['Material.005']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_6.geometry}
          material={materials.None}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_7.geometry}
          material={materials['black_glossy.003']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_8.geometry}
          material={materials.black_with_text}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_9.geometry}
          material={materials.black_with_text}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_10.geometry}
          material={materials.Metal}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_11.geometry}
          material={materials.Metal}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_12.geometry}
          material={materials.Metal}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_13.geometry}
          material={materials.black_glossy}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_14.geometry}
          material={materials['black_glossy.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_15.geometry}
          material={materials['black_glossy.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_16.geometry}
          material={materials['black_glossy.002']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_17.geometry}
          material={materials.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_18.geometry}
          material={materials.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_19.geometry}
          material={materials.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_20.geometry}
          material={materials.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_21.geometry}
          material={materials.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_22.geometry}
          material={materials.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_23.geometry}
          material={materials.port}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_24.geometry}
          material={materials.port_frame}
        />
      </group>
    </group>
  )
}

// useGLTF.preload('/nvidia_geforce_rtx_3090_graphics_card.glb')